const { Markup } = require('telegraf'),
      { Router } = require('../../modules/utils'),
      changeGroup = require('./change-group'),
      subject = require('./subject'),
      action = require('./action'),
      course = require('./course')

const router = Router('cabinet',
  ctx => ctx.message.text !== config.btns.cabinet && !ctx.session.cabinet,
  ctx => ctx.session.cabinet && ctx.session.cabinet.nextCondition || 'cabinet')

router.on('cabinet', ctx => {
  ctx.session.cabinet = { nextCondition: 'action' }
  // const keyboard = ['–ü–æ–º–µ–Ω—è—Ç—å –≥—Ä—É–ø–ø—É', '–°–º–µ–Ω–∏—Ç—å —Å–µ–º–µ—Å—Ç—Ä', '–ö—Ç–æ —è?', '–ö–æ–º–∞–Ω–¥—ã', config.cabinet_btns.back]
  const keyboard = Object.values(config.cabinet_btns)
  if (ctx.session.user.telegraph_user)
    keyboard.push('üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –ª–µ–∫—Ü–∏—é')

  ctx.reply('–¢—É—Ç –º–æ–∂–µ—à—å –ø—Ä–∏—Ç–≤–æ—Ä–∏—Ç—å—Å—è –∫–µ–º-—Ç–æ –¥—Ä—É–≥–∏–º', Markup
    .keyboard(keyboard, { columns: 2 }).resize().extra()
  )
  ctx.state.saveSession()
})

router.on('action', action)
router.on('changeGroup', changeGroup)
router.on('subject', subject)
router.on('course', course)

// this router triggers only when user has sent text message instead of document
router.on('upload', ctx => {
  if (ctx.state.btnVal === '–û—Ç–º–µ–Ω–∞') {
    ctx.state.home('–û—á–µ–Ω—å –∂–∞–ª—å, —è —Ç–∞–∫ –ª—é–±–ª—é —á–∏—Ç–∞—Ç—å –≤–∞—à–∏ –ª–µ–∫—Ü–∏–∏ :c')
  } else {
    ctx.reply('–ù—É –º–Ω–µ —Å–ª–æ–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å —ç—Ç–æ –∑–∞ —Ñ–∞–π–ª')
  }
})

// this router triggers only when user has sent text message instead of photo
router.on('photo', ctx => {
  if (ctx.state.btnVal === '–û—Ç–º–µ–Ω–∞') {
    ctx.state.home('–û—á–µ–Ω—å –∂–∞–ª—å, —è —Ç–∞–∫ –ª—é–±–ª—é —á–∏—Ç–∞—Ç—å –≤–∞—à–∏ –ª–µ–∫—Ü–∏–∏ :c')
  } else {
    ctx.reply('–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ —á—Ç–æ')
  }  
})

module.exports = router.middleware()
